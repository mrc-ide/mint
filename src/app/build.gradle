buildscript {
    ext.kotlin_version = '1.9.21'
}

apply plugin: 'application'

mainClassName = "org.imperial.mrc.mint.AppStartKt"

jacoco {
    toolVersion = "0.8.7"
    reportsDirectory = file("$projectDir/coverage")
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
    }
}

group = 'org.imperial.mrc'
sourceCompatibility = '1.8'

dependencies {

    implementation 'com.github.kittinunf.fuel:fuel:2.3.1'
    implementation 'com.github.kittinunf.fuel:fuel-json:2.3.1'
    implementation 'com.github.kittinunf.fuel:fuel-coroutines:2.3.1'
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.1'
    implementation 'org.pac4j:spring-webmvc-pac4j:3.2.0'
    implementation 'org.slf4j:slf4j-nop:1.7.26'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: "com.vaadin.external.google", module:"android-json"
        exclude module: 'junit'
        exclude group: "org.junit.vintage", module: "junit-vintage-engine"
    }
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation "com.nhaarman:mockito-kotlin:1.3.0"
    testImplementation "org.jsoup:jsoup:1.11.3"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.4.2"
    testImplementation "org.leadpony.justify:justify:1.1.0"
    testImplementation "org.leadpony.joy:joy:1.1.0"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}


task compileFrontEnd() {
    doLast {
        exec {
            commandLine "npm", "run", "build", "--prefix=$projectDir/static/"
        }
    }
}

//Run bootRun with eg -PspringProfile=prod to run with a different active profile from default 'dev'
//defined in gradle.properties
bootRun {
    bootRun.systemProperty 'spring.profiles.active', springProfile
}

processResources.dependsOn 'compileFrontEnd'

